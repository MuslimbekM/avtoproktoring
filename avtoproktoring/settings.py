"""
Django settings for avtoproktoring project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import os

import firebase_admin
from firebase_admin import credentials, initialize_app, storage
from django.contrib.messages import constants as message_constants

# Faylni to‘g‘ri joylashgan yo‘lga ulang
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
cred = credentials.Certificate(os.path.join(BASE_DIR, 'avtoproctoring-firebase-adminsdk-ooxip-3cb6c76457.json'))
initialize_app(cred, {
    'storageBucket': 'avtoproctoring.firebasestorage.app'  # Storage Bucket nomini kiritish
})

# Storage ni ishlatish
bucket = storage.bucket()








# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_ph^0un#tsz6^&wk^ni545$ite7qonj^^y(p5-_^edx=z+(ehp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'monitoring'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/admin-dashboard/'  # Kirgandan keyin yo'naladigan sahifa


ROOT_URLCONF = 'avtoproktoring.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'avtoproktoring.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django settings.py faylidagi asosiy session sozlamalari

# SESSION_ENGINE: Session ma'lumotlarini qayerda saqlashni belgilaydi
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Ma'lumotlar bazasida saqlash

# SESSION_COOKIE_NAME: Session cookie'ining nomi
SESSION_COOKIE_NAME = 'sessionid'  # Sukut bo'yicha 'sessionid'

# SESSION_COOKIE_AGE: Session cookie'ining amal qilish muddati (soniyalar)
SESSION_COOKIE_AGE = 1209600  # 2 hafta (14 kun)

# SESSION_COOKIE_SECURE: True bo'lsa, cookie'lar faqat HTTPS orqali yuboriladi
SESSION_COOKIE_SECURE = False  # Faqat HTTPS uchun True qilib sozlang

# SESSION_EXPIRE_AT_BROWSER_CLOSE: True bo'lsa, brauzer yopilganda session tugaydi
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# SESSION_SAVE_EVERY_REQUEST: True bo'lsa, har bir so'rovda session yangilanadi
SESSION_SAVE_EVERY_REQUEST = False

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

MESSAGE_LEVEL = message_constants.DEBUG
